import{_ as e,c as s,o as i,aA as t}from"./chunks/framework.B94pNcpO.js";const u=JSON.parse('{"title":"Selecting the backend","description":"","frontmatter":{},"headers":[],"relativePath":"man/backend.md","filePath":"man/backend.md","lastUpdated":null}'),l={name:"man/backend.md"};function n(d,a,p,o,h,r){return i(),s("div",null,[...a[0]||(a[0]=[t('<h1 id="Selecting-the-backend" tabindex="-1">Selecting the backend <a class="header-anchor" href="#Selecting-the-backend" aria-label="Permalink to &quot;Selecting the backend {#Selecting-the-backend}&quot;">â€‹</a></h1><p><a href="https://github.com/PTsolvers/JustRelax.jl" target="_blank" rel="noreferrer">JustRelax.jl</a> supports three backends: the default CPU backend, and two GPU backends for Nvidia and AMD GPUs. The default CPU backend is selected upon loading JustRelax:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JustRelax</span></span></code></pre></div><p>The GPU backends are implemented as extensions, and can be selected upon loading the appropriate GPU package before loading JustRelax. If running on Nvidia or AMD GPUs, use the <a href="https://github.com/JuliaGPU/CUDA.jl" target="_blank" rel="noreferrer">CUDA.jl</a> or the <a href="https://github.com/JuliaGPU/AMDGPU.jl" target="_blank" rel="noreferrer">AMDGPU.jl</a> package, respectively:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-AFAlB" id="tab-GWfVC5a" checked><label data-title="Nvidia GPUs" for="tab-GWfVC5a">Nvidia GPUs</label><input type="radio" name="group-AFAlB" id="tab-uGeonoH"><label data-title="AMD GPUs" for="tab-uGeonoH">AMD GPUs</label></div><div class="blocks"><div class="language-julia vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CUDA, JustRelax</span></span></code></pre></div><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AMDGPU, JustRelax</span></span></code></pre></div></div></div><p>Two and three dimensional solvers are implemented in different submodules, which also need to be loaded:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-tOKO4" id="tab-rX_rGr_" checked><label data-title="2D module" for="tab-rX_rGr_">2D module</label><input type="radio" name="group-tOKO4" id="tab-HODr_b1"><label data-title="3D module" for="tab-HODr_b1">3D module</label></div><div class="blocks"><div class="language-julia vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JustRelax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JustRelax2D</span></span></code></pre></div><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JustRelax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JustRelax3D</span></span></code></pre></div></div></div>',7)])])}const k=e(l,[["render",n]]);export{u as __pageData,k as default};
